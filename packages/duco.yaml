fan:
  - platform: template
    fans:
      ducobox:
        unique_id: "ducobox"
        friendly_name: "DucoBox"
        value_template: >
          {% if states('sensor.ducobox') is defined %}
            on
          {% else %}
            off
          {% endif %}
        turn_on:
          action: rest_command.set_ducobox_mode
          data:
            state: "AUTO"
        turn_off:
          action: rest_command.set_ducobox_mode
          data:
            state: "AUTO"
        preset_modes:
          - "Auto"
          - "Away"
          - "Manual 1"
          - "Manual 1 Forced"
          - "Manual 2"
          - "Manual 2 Forced"
          - "Manual 3"
          - "Manual 3 Forced"
        preset_mode_template: >
          {% if states('sensor.ducobox') == "MAN1" %}
            Manual 1
          {% elif states('sensor.ducobox') == "CNT1" %}
            Manual 1 Forced
          {% elif states('sensor.ducobox') == "MAN2" %}
            Manual 2
          {% elif states('sensor.ducobox') == "CNT2" %}
            Manual 2 Forced
          {% elif states('sensor.ducobox') == "MAN3" %}
            Manual 3
          {% elif states('sensor.ducobox') == "CNT3" %}
            Manual 3 Forced
          {% elif states('sensor.ducobox') == "EMPT" %}
            Away
          {% else %}
            Auto
          {% endif %}
        set_preset_mode:
          - action: rest_command.set_ducobox_mode
            data:
              state: >
                {% if preset_mode ==  "Manual 1" %}
                  MAN1
                {% elif preset_mode == "Manual 1 Forced" %}
                  CNT1
                {% elif preset_mode == "Manual 2" %}
                  MAN2
                {% elif preset_mode ==  "Manual 2 Forced" %}
                  CNT2
                {% elif preset_mode ==  "Manual 3" %}
                  MAN3
                {% elif preset_mode == "Manual 3 Forced" %}
                  CNT3
                {% elif preset_mode == "Away" %}
                  EMPT
                {% else %}
                  AUTO
                {% endif %}
        percentage_template: "{{ states('sensor.ducobox_target') }}"

rest:
  - resource: http://192.168.16.18/nodeinfoget?node=1
    scan_interval: 5
    sensor:
      - name: DucoBox
        unique_id: ducobox
        value_template: "{{ value_json.state }}"
        icon: mdi:fan
        json_attributes:
          - devtype
          - location
          - state
          - mode
          - ovrl
          - swversion
          - serialnb
      - name: DucoBox temperature
        unique_id: ducobox_temperature
        value_template: "{{ value_json.temp }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: DucoBox humidity
        unique_id: ducobox_humidity
        value_template: "{{ value_json.rh }}"
        device_class: humidity
        state_class: measurement
        unit_of_measurement: "%"
      - name: DucoBox target
        unique_id: ducobox_target
        value_template: "{{ value_json.trgt }}"
        state_class: measurement
        unit_of_measurement: "%"
  - resource: http://192.168.16.18/boxinfoget
    scan_interval: 9
    sensor:
      - name: DucoBox temperature ODA
        unique_id: ducobox_tempODA
        value_template: "{{ value_json.EnergyInfo.TempODA / 10 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: DucoBox temperature SUP
        unique_id: ducobox_tempSUP
        value_template: "{{ value_json.EnergyInfo.TempSUP / 10}}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: DucoBox temperature ETA
        unique_id: ducobox_tempETA
        value_template: "{{ value_json.EnergyInfo.TempODA /10 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: DucoBox temperature EHA
        unique_id: ducobox_tempEHA
        value_template: "{{ value_json.EnergyInfo.TempSUP /10 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: DucoBox bypass
        unique_id: ducobox_bypass
        value_template: "{{ value_json.EnergyInfo.BypassStatus }}"
        state_class: measurement
        unit_of_measurement: "%"
      - name: DucoBox bypass temperature
        unique_id: ducobox_bypass_temp
        value_template: "{{ value_json.EnergyInfo.BypassRequestedTemp / 10 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: DucoBox filter remaining
        unique_id: ducobox_filter
        value_template: "{{ value_json.EnergyInfo.FilterRemainingTime }}"
        device_class: duration
        unit_of_measurement: "d"
  - resource: http://192.168.16.18/nodeinfoget?node=2
    scan_interval: 30
    sensor:
      - name: Woonkamer temperature
        unique_id: woonkamer_temperature
        value_template: "{{ value_json.temp-1.5 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: Woonkamer carbon_dioxide
        unique_id: woonkamer_carbon_dioxide
        value_template: "{{ value_json.co2 }}"
        device_class: carbon_dioxide
        state_class: measurement
        unit_of_measurement: "ppm"
  - resource: http://192.168.16.18/nodeinfoget?node=3
    scan_interval: 30
    sensor:
      - name: Slaapkamer temperature
        unique_id: slaapkamer_temperature
        value_template: "{{ value_json.temp-0.8 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: Slaapkamer carbon_dioxide
        unique_id: slaapkamer_carbon_dioxide
        value_template: "{{ value_json.co2 }}"
        device_class: carbon_dioxide
        state_class: measurement
        unit_of_measurement: "ppm"
  - resource: http://192.168.16.18/nodeinfoget?node=4
    scan_interval: 30
    sensor:
      - name: Sauna temperature
        unique_id: sauna_temperature
        value_template: "{{ value_json.temp-0.8 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: Sauna carbon_dioxide
        unique_id: sauna_carbon_dioxide
        value_template: "{{ value_json.co2 }}"
        device_class: carbon_dioxide
        state_class: measurement
        unit_of_measurement: "ppm"
  - resource: http://192.168.16.18/nodeinfoget?node=5
    scan_interval: 30
    sensor:
      - name: Kantoor temperature
        unique_id: kantoor_temperature
        value_template: "{{ value_json.temp-1.0 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: Kantoor carbon_dioxide
        unique_id: kantoor_carbon_dioxide
        value_template: "{{ value_json.co2 }}"
        device_class: carbon_dioxide
        state_class: measurement
        unit_of_measurement: "ppm"
  - resource: http://192.168.16.18/nodeinfoget?node=6
    scan_interval: 30
    sensor:
      - name: Gameroom temperature
        unique_id: gameroom_temperature
        value_template: "{{ value_json.temp-0.3 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: Gameroom carbon_dioxide
        unique_id: gameroom_carbon_dioxide
        value_template: "{{ value_json.co2 }}"
        device_class: carbon_dioxide
        state_class: measurement
        unit_of_measurement: "ppm"
  - resource: http://192.168.16.18/nodeinfoget?node=7
    scan_interval: 30
    sensor:
      - name: Badkamer temperature
        unique_id: badkamer_temperature
        value_template: "{{ value_json.temp-1.5 }}"
        device_class: temperature
        state_class: measurement
        unit_of_measurement: "°C"
      - name: Badkamer carbon_dioxide
        unique_id: badkamer_carbon_dioxide
        value_template: "{{ value_json.co2 }}"
        device_class: carbon_dioxide
        state_class: measurement
        unit_of_measurement: "ppm"

rest_command:
  set_ducobox_mode:
    url: "http://192.168.16.18/nodesetoperstate?node=1&value={{ state }}"
