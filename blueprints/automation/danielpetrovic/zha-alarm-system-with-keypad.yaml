blueprint:
  name: Alarm System with ZHA Keypad support
  author: danielpetrovic
  description: "# Alarm System with ZHA Keypad support\n\n
    This blueprint enables a custom Alarm system without the needs of any custom_component. It can sync the states with a phsyical keypad connected to ZHA.\n\n
    You can set multiple codes for multiple users, including hexadicimals for RFID tags. The logic to check if a code is present is inside this blueprint so your alarm panel doesn't need to support multiple codes.\n\n
    You can change the notifications that are sent when the Alarm Control Panel changes states, defaults are set.\n
    You can set to show a (live) camerafeed from any of your cameras inside the notification of the state change.\n
    You can change what scripts are run per Alarm state change. They will run at the same time, so the order doesn't matter.\n"
  domain: automation
  source_url: https://github.com/danielpetrovic/home-assistant-config/blob/main/blueprints/automation/danielpetrovic/zha-alarm-system-with-keypad.yaml
  input:
    alarm_main:
      name: Alarm Control Panel (Main)
      description: Here you need to set the primary Alarm control panel. I've set it up with a Manual Alarm Panel, see instructions below how to create through YAML. Don't select a ZHA keypad here, as it doesn't support all states.
      selector:
        entity:
          filter:
            - domain:
                - alarm_control_panel
          multiple: false
    alarm_code_user:
      name: Alarm Code User (Text Helper)
      description: Create a Text helper within Home Assistant to contain the Alarm Code per user. You can set as many as you want, just make sure each code has it's own helper. The format supported is 1-16 digits including Hexadecimals for RFID tags.
      selector:
        entity:
          filter:
            - domain:
                - input_text
          multiple: true
    alarm_keypad:
      name: Set your secondary Alarm Control Panel, like a physical keypad.
      description: Here you need to set the secondary alarm control panel. This can be a physical or virtual keypad, I'm using it with the frient Intelligent Keypad connected to ZHA.
      icon: mdi:dialpad
      collapsed: true
      input:
        alarm_keypad_device:
          name: Alarm Control Panel (Keypad)
          description: Set the ZHA Keypad Device to be able to receive the key commands from the device.
          selector:
            device:
              filter:
                - integration: zha
              multiple: false
        alarm_keypad:
          name: Alarm Control Panel (Keypad)
          description: Set the Alarm Control Panel of the Keypad Device to be able to sync the state to the Keypad.
          selector:
            entity:
              filter:
                - domain:
                    - alarm_control_panel
              multiple: false
        alarm_code_keypad:
          name: Alarm Code Keypad (Text Helper)
          description: Create a Text helper within Home Assistant to contain the Alarm Code of the Keypad alarm_control_panel set in the ZHA Settings.
          selector:
            entity:
              filter:
                - domain:
                    - input_text
              multiple: false
    alarm_notifications:
      name: Set the notifications you want to send when the modes change, defaults are present.
      icon: mdi:bell-ring
      collapsed: true
      input:
        alarm_notifications_armed_away:
          name: Armed Away Mode
          default: The alarm is now in Away mode.
          description: Here you can set the notification to be sent when the alarm is set to Away mode.
          selector:
            text:
        alarm_notifications_armed_home:
          name: Armed Home Mode
          default: The alarm is now in Home mode.
          description: Here you can set the notification to be sent when the alarm is set to Home mode.
          selector:
            text:
        alarm_notifications_armed_night:
          name: Armed Night Mode
          default: The alarm is now in Night mode.
          description: Here you can set the notification to be sent when the alarm is set to Night mode.
          selector:
            text:
        alarm_notifications_arming:
          name: Arming
          default: The alarm is being set. Please exit the house promptly!
          description: Here you can set the notification to be sent when the alarm is Arming.
          selector:
            text:
        alarm_notifications_pending:
          name: Pending
          default: triggered the alarm! Please disarm the alarm to prevent it from activating!
          description: Here you can set the notification to be sent when the alarm is Pending. It starts with the name of the entity that caused the state change, this cannot be changed. This is the state which is entered before triggering the alarm, if you have set a delay_time for the Alarm, otherwise it will directly go to triggered.
          selector:
            text:
        alarm_notifications_triggered:
          name: Triggered
          default: triggered the alarm! The alarm has been activated!
          description: Here you can set the notification to be sent when the alarm is Triggered. It starts with the name of the entity that caused the state change, this cannot be changed.
          selector:
            text:
        alarm_notifications_disarmed:
          name: Disarmed
          default: The alarm is now disarmed.
          description: Here you can set the notification to be sent when the alarm is Disarmed.
          selector:
            text:
    alarm_mode_away:
      name: Settings for when the alarm is set to Away mode.
      icon: mdi:shield-lock
      collapsed: true
      input:
        alarm_sensor_away:
          name: Sensors
          default: []
          description: Here you can set the Sensors that should trigger the alarm when it is set to Away mode. If you don't set any sensors here, the alarm will not trigger when set to this mode.
          selector:
            entity:
              filter:
                - domain:
                    - binary_sensor
                  device_class:
                    - door
                    - motion
                    - occupancy
                    - opening
                    - presence
                    - window
              multiple: true
        alarm_scripts_away:
          name: Scripts
          default: []
          description: Scripts to run when alarm changes to this mode. They will run at the same time, so the order doesn't matter.
          selector:
            entity:
              filter:
                - domain:
                    - script
              multiple: true
        alarm_camera_away:
          name: Camera
          default: []
          description: Camera to show in notification when it is triggered in this mode. If not set it will just show the notification with the actions.
          selector:
            entity:
              filter:
                - domain:
                    - camera
              multiple: false
    alarm_mode_home:
      name: Settings for when the alarm is set to Home mode.
      icon: mdi:shield-home
      collapsed: true
      input:
        alarm_sensor_home:
          name: Sensors
          default: []
          description: Here you can set the Sensors that should trigger the alarm when it is set to Home mode. If you don't set any sensors here, the alarm will not trigger when set to this mode.
          selector:
            entity:
              filter:
                - domain:
                    - binary_sensor
                  device_class:
                    - door
                    - motion
                    - occupancy
                    - opening
                    - presence
                    - window
              multiple: true
        alarm_scripts_home:
          name: Scripts
          default: []
          description: Scripts to run when alarm changes to this mode. They will run at the same time, so the order doesn't matter.
          selector:
            entity:
              filter:
                - domain:
                    - script
              multiple: true
        alarm_camera_home:
          name: Camera
          default: []
          description: Camera to show in notification when it is triggered in this mode. If not set it will just show the notification with the actions.
          selector:
            entity:
              filter:
                - domain:
                    - camera
              multiple: false
    alarm_mode_night:
      name: Settings for when the alarm is set to Night mode.
      icon: mdi:shield-moon
      collapsed: true
      input:
        alarm_sensor_night:
          name: Sensors
          default: []
          description: Here you can set the Sensors that should trigger the alarm when it is set to Night mode. If you don't set any sensors here, the alarm will not trigger when set to this mode.
          selector:
            entity:
              filter:
                - domain:
                    - binary_sensor
                  device_class:
                    - door
                    - motion
                    - occupancy
                    - opening
                    - presence
                    - window
              multiple: true
        alarm_scripts_night:
          name: Scripts
          default: []
          description: Scripts to run when alarm changes to this mode. They will run at the same time, so the order doesn't matter.
          selector:
            entity:
              filter:
                - domain:
                    - script
              multiple: true
        alarm_camera_night:
          name: Camera
          default: []
          description: Camera to show in notification when it is triggered in this mode. If not set it will just show the notification with the actions.
          selector:
            entity:
              filter:
                - domain:
                    - camera
              multiple: false
    alarm_mode_disarmed:
      name: Settings for when the alarm is Disarmed
      icon: mdi:shield-off
      collapsed: true
      input:
        alarm_scripts_disarmed:
          name: Scripts
          default: []
          description: Scripts to run when alarm changes to this mode. They will run at the same time, so the order doesn't matter.
          selector:
            entity:
              filter:
                - domain:
                    - script
              multiple: true
    alarm_mode_triggered:
      name: Settings for when the alarm is Triggered
      icon: mdi:shield-alert
      collapsed: true
      input:
        alarm_scripts_triggered:
          name: Scripts
          default: []
          description: Scripts to run when alarm changes to this mode. They will run at the same time, so the order doesn't matter.
          selector:
            entity:
              filter:
                - domain:
                    - script
              multiple: true
        alarm_camera_triggered:
          name: Camera
          default: []
          description: Camera to show in notification when it is triggered in this mode. If not set it will just show the notification with the actions.
          selector:
            entity:
              filter:
                - domain:
                    - camera
              multiple: false

mode: restart
max_exceeded: silent

variables:
  alarm_main: !input alarm_main
  alarm_keypad: !input alarm_keypad
  alarm_code_keypad: !input alarm_code_keypad
  alarm_code_keypad_state: "{{ states(alarm_code_keypad) }}"
  alarm_code_user: !input alarm_code_user
  alarm_code_user_state: "{{ alarm_code_user | map('states') | list }}"
  alarm_notifications_armed_away: !input alarm_notifications_armed_away
  alarm_notifications_armed_home: !input alarm_notifications_armed_home
  alarm_notifications_armed_night: !input alarm_notifications_armed_night
  alarm_notifications_arming: !input alarm_notifications_arming
  alarm_notifications_pending: !input alarm_notifications_pending
  alarm_notifications_triggered: !input alarm_notifications_triggered
  alarm_notifications_disarmed: !input alarm_notifications_disarmed
  alarm_scripts_away: !input alarm_scripts_away
  alarm_scripts_home: !input alarm_scripts_home
  alarm_scripts_night: !input alarm_scripts_night
  alarm_scripts_disarmed: !input alarm_scripts_disarmed
  alarm_scripts_triggered: !input alarm_scripts_triggered

triggers:
  - trigger: state
    entity_id: !input alarm_main
    alias: alarm_main
    id: alarm_main
  - trigger: event
    event_type: zha_event
    event_data:
      device_id: !input alarm_keypad_device
      command: arm
    alias: alarm_keypad
    id: alarm_keypad
  - trigger: state
    entity_id: !input alarm_sensor_away
    to: "on"
    alias: alarm_sensor_away
    id: alarm_sensor_away
  - trigger: state
    entity_id: !input alarm_sensor_home
    to: "on"
    alias: alarm_sensor_home
    id: alarm_sensor_home
  - trigger: state
    entity_id: !input alarm_sensor_night
    to: "on"
    alias: alarm_sensor_night
    id: alarm_sensor_night

conditions: []

actions:
  - alias: Alarm Sync
    choose:
      - alias: Alarm Main to Alarm Keypad sync
        conditions:
          - condition: trigger
            id: alarm_main
        sequence:
          - variables:
              arm_action: |
                {% if is_state(alarm_main, 'armed_away') %}
                  alarm_control_panel.alarm_arm_away
                {% elif is_state(alarm_main, 'armed_home') %}
                  alarm_control_panel.alarm_arm_home
                {% elif is_state(alarm_main, 'armed_night') %}
                  alarm_control_panel.alarm_arm_night
                {% elif is_state(alarm_main, 'disarmed') %}
                  alarm_control_panel.alarm_disarm
                {% elif is_state(alarm_main, 'arming') %}
                  alarm_control_panel.alarm_trigger
                {% elif is_state(alarm_main, 'pending') %}
                  alarm_control_panel.alarm_trigger
                {% elif is_state(alarm_main, 'triggered') %}
                  alarm_control_panel.alarm_trigger
                {% endif %}
          - action: "{{ arm_action }}"
            data:
              code: "{{ alarm_code_keypad_state }}"
            target:
              entity_id: !input alarm_keypad
      - alias: Alarm Keypad to Alarm Main sync
        conditions:
          - condition: trigger
            id: alarm_keypad
          - condition: template
            value_template: "{{ trigger.event.data.args.code in alarm_code_user_state }}"
        sequence:
          - variables:
              arm_action: |
                {% if trigger.event.data.args.arm_mode == 3 %}
                  alarm_control_panel.alarm_arm_away
                {% elif trigger.event.data.args.arm_mode == 1 %}
                  alarm_control_panel.alarm_arm_home
                {% elif trigger.event.data.args.arm_mode == 2 %}
                  alarm_control_panel.alarm_arm_night
                {% elif trigger.event.data.args.arm_mode == 0 %}
                  alarm_control_panel.alarm_disarm
                {% endif %}
          - action: "{{ arm_action }}"
            data:
              code: "{{ alarm_code_user_state }}"
            target:
              entity_id: !input alarm_main
  - alias: Alarm Scripts
    choose:
      - alias: Away
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: armed_away
        sequence:
          - action: script.turn_on
            target:
              entity_id: "{{ alarm_scripts_away }}"
      - alias: Home
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: armed_home
        sequence:
          - action: script.turn_on
            target:
              entity_id: "{{ alarm_scripts_home }}"
      - alias: Night
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: armed_night
        sequence:
          - action: script.turn_on
            target:
              entity_id: "{{ alarm_scripts_night }}"
      - alias: Disarmed
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: disarmed
        sequence:
          - action: script.turn_on
            target:
              entity_id: "{{ alarm_scripts_disarmed }}"
      - alias: Triggered
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: triggered
        sequence:
          - action: script.turn_on
            target:
              entity_id: "{{ alarm_scripts_triggered }}"
  - alias: Alarm Notifications
    choose:
      - alias: Away
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: armed_away
        sequence:
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ alarm_notifications_armed_away }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                    icon: "sfsymbols:bell.slash"
                  - action: ARM_HOME
                    title: Alarm Home
                    icon: "sfsymbols:bell.fill"
                  - action: ARM_NIGHT
                    title: Alarm Night
                    icon: "sfsymbols:bell"
      - alias: Home
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: armed_home
        sequence:
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ alarm_notifications_armed_home }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                    icon: "sfsymbols:bell.slash"
                  - action: ARM_HOME
                    title: Alarm Home
                    icon: "sfsymbols:bell.fill"
                  - action: ARM_NIGHT
                    title: Alarm Night
                    icon: "sfsymbols:bell"
      - alias: Night
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: armed_night
        sequence:
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ alarm_notifications_armed_night }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                    icon: "sfsymbols:bell.slash"
                  - action: ARM_HOME
                    title: Alarm Home
                    icon: "sfsymbols:bell.fill"
                  - action: ARM_NIGHT
                    title: Alarm Night
                    icon: "sfsymbols:bell"
      - alias: Disarmed
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: disarmed
        sequence:
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ alarm_notifications_disarmed }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                    icon: "sfsymbols:bell.slash"
                  - action: ARM_HOME
                    title: Alarm Home
                    icon: "sfsymbols:bell.fill"
                  - action: ARM_NIGHT
                    title: Alarm Night
                    icon: "sfsymbols:bell"
      - alias: Triggered
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: triggered
        sequence:
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ trigger.to_state.name }} {{ alarm_notifications_armed_away }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                    icon: "sfsymbols:bell.slash"
                  - action: ARM_HOME
                    title: Alarm Home
                    icon: "sfsymbols:bell.fill"
                  - action: ARM_NIGHT
                    title: Alarm Night
                    icon: "sfsymbols:bell"
                entity_id: !input alarm_camera_triggered
                push:
                  sound:
                    name: default
                    critical: 1
                    volume: 1
                    ttl: 0
                    priority: high
      - alias: Arming
        conditions:
          - condition: trigger
            id: alarm_main
          - condition: state
            entity_id: !input alarm_main
            state: arming
        sequence:
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ alarm_notifications_arming }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                  - action: ARM_HOME
                    title: Alarm Home
                  - action: ARM_NIGHT
                    title: Alarm Night
  - alias: Alarm Triggers
    choose:
      - alias: alarm_sensor_away
        conditions:
          - condition: trigger
            id: alarm_sensor_away
          - condition: state
            entity_id: !input alarm_main
            state: armed_away
        sequence:
          - alias: Trigger alarm
            action: alarm_control_panel.alarm_trigger
            target:
              entity_id: !input alarm_main
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ trigger.to_state.name }} {{ alarm_notifications_pending }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                  - action: ARM_HOME
                    title: Alarm Home
                  - action: ARM_NIGHT
                    title: Alarm Night
                entity_id: !input alarm_camera_away
                push:
                  sound:
                    name: default
                    critical: 1
                    volume: 1
                    ttl: 0
                    priority: high
      - alias: alarm_sensor_home
        conditions:
          - condition: trigger
            id: alarm_sensor_home
          - condition: state
            entity_id: !input alarm_main
            state: armed_home
        sequence:
          - alias: Trigger alarm
            action: alarm_control_panel.alarm_trigger
            target:
              entity_id: !input alarm_main
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ trigger.to_state.name }} {{ alarm_notifications_pending }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                  - action: ARM_HOME
                    title: Alarm Home
                  - action: ARM_NIGHT
                    title: Alarm Night
                entity_id: !input alarm_camera_home
                push:
                  sound:
                    name: default
                    critical: 1
                    volume: 1
                    ttl: 0
                    priority: high
      - alias: alarm_sensor_night
        conditions:
          - condition: trigger
            id: alarm_sensor_night
          - condition: state
            entity_id: !input alarm_main
            state: armed_night
        sequence:
          - alias: Trigger alarm
            action: alarm_control_panel.alarm_trigger
            target:
              entity_id: !input alarm_main
          - alias: Notify
            action: notify.notify
            data:
              message: "{{ trigger.to_state.name }} {{ alarm_notifications_pending }}"
              data:
                actions:
                  - action: DISARM
                    title: Alarm Disarm
                  - action: ARM_HOME
                    title: Alarm Home
                  - action: ARM_NIGHT
                    title: Alarm Night
                entity_id: !input alarm_camera_night
                push:
                  sound:
                    name: default
                    critical: 1
                    volume: 1
                    ttl: 0
                    priority: high
