blueprint:
  name: ZHA - Philips Hue Tap Dial Switch (RDM002)
  author: danielpetrovic
  description: "# ZHA - Philips Hue Tap Dial Switch (RDM002)\n\n
    This blueprint enables comprehensive configuration of a Philips Hue Tap Dial Switch.\n
    You can select different presets for the Light and Media mode and control different things at the same time.\n
    The dial can be used with each button, simply press the button you want to use and turn the dial to control it for that specific setting.\n"
  domain: automation
  homeassistant:
    min_version: 2024.10.0
  source_url: https://github.com/danielpetrovic/home-assistant-config/blob/main/blueprints/automation/danielpetrovic/zha-philips-hue-tap-dial-switch.yaml
  input:
    remote:
      name: Philips Hue Tap Dial Switch
      selector:
        device:
          entity:
            - domain:
                - sensor
              device_class:
                - battery
          filter:
            - integration: zha
              manufacturer: Signify Netherlands B.V.
              model: RDM002
          multiple: false
    last_pressed:
      name: Last Pressed Input Text Helper
      description:
        Create an input text helper within Home Assistant to keep track
        of the last button pressed. This will facilitate implementing different rotation
        actions based on the last button pressed. **Each switch requires a unique helper!**
      selector:
        entity:
          filter:
            - domain:
                - input_text
          multiple: false
    button_1_custom:
      name: Button 1 - Settings for Custom Actions
      icon: mdi:numeric-1-circle-outline
      collapsed: true
      input:
        button_1_press:
          name: Button 1 (Short Press)
          description: Action to run on a short press of Button 1
          default: []
          selector:
            action: {}
        button_1_short_release:
          name: Button 1 (Short Release)
          description: Action to run on a release of Button 1 after a short press
          default: []
          selector:
            action: {}
        button_1_hold:
          name: Button 1 (Long Press)
          description:
            Action to run on a long press of Button 1. Will repeat while
            the button is held
          default: []
          selector:
            action: {}
        button_1_long_release:
          name: Button 1 (Long Release)
          description: Action to run when Button 1 is released after a long press.
          default: []
          selector:
            action: {}
        button_1_double:
          name: Button 1 (Double Press)
          description: Action to run on a double press of Button 1
          default: []
          selector:
            action: {}
        button_1_triple:
          name: Button 1 (Triple Press)
          description: Action to run on a triple press of Button 1
          default: []
          selector:
            action: {}
        button_1_quadruple:
          name: Button 1 (Quadruple Press)
          description: Action to run on a quadruple press of Button 1
          default: []
          selector:
            action: {}
        button_1_quintuple:
          name: Button 1 (Quintuple Press)
          description: Action to run on a quintuple press of Button 1
          default: []
          selector:
            action: {}
        button_1_rotate_left:
          name: Button 1 (Rotate Left)
          description:
            Action to run when dial is turned to the left after pressing
            Button 1
          default: []
          selector:
            action: {}
        button_1_rotate_right:
          name: Button 1 (Rotate Right)
          description:
            Action to run when dial is turned to the right after pressing
            Button 1
          default: []
          selector:
            action: {}
    button_1_light:
      name: Button 1 - Settings for Light Mode
      icon: mdi:lightbulb
      collapsed: true
      input:
        button_1_light:
          name: Light
          default: []
          description: The Lights to control with this button.
          selector:
            target:
              entity:
                - domain:
                    - light
        button_1_light_schedule:
          name: Light - Schedule
          default: []
          description:
            Create a schedule helper within Home Assistant to set presets
            for Light. This will facilitate implementing different brightness and
            color temperatures across the day **Schedules can be reused between light**
          selector:
            entity:
              filter:
                - domain:
                    - schedule
              multiple: false
        button_1_light_brightness:
          name: Light - Brightness
          default: 100
          description: The default brightness for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 100
              step: 5
              unit_of_measurement: "%"
              mode: slider
        button_1_light_color:
          name: Light - Color (Kelvin)
          default: 3333
          description: The default color temp in Kelvin for the light, this value is only used if not set in the schedule.
          selector:
            color_temp:
              unit: kelvin
              min: 2000
        button_1_light_transition:
          name: Light - Transition
          default: 1
          description: The default transition for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 10
              step: 1
              mode: slider
        button_1_short_release_light_mode:
          name: Button 1 (Short Release) Mode
          default: turn_on
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_1_long_release_light_mode:
          name: Button 1 (Long Release) Mode
          default: turn_off
          description: Here you can select if want to use one of the Light functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_1_rotate_light_mode:
          name: Button 1 (Rotate) Mode
          default: dim
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Dim"
                  value: dim
              custom_value: false
              multiple: true
    button_1_media:
      name: Button 1 - Settings for Media Mode
      icon: mdi:play-box
      collapsed: true
      input:
        button_1_media:
          name: Media Player
          default: []
          description:
            The media player to control with this button and the dial for
            volume. Short Press turns Media Player on, sets Start Volume and selects
            the dial for changing the volume based on speed of rotation, Long Release
            turns Media Player off
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_1_media_leader:
          name: Media Player Group Leader
          default: []
          description: The media player to use as Group Leader to use the join command with. This works great with Music Assistant. This Media Player is not used by the other actions.
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_1_media_volume:
          name: Media Player - Volume
          default: 35
          description: The default volume for the media player.
          selector:
            number:
              min: 0.0
              max: 100.0
              step: 5.0
              unit_of_measurement: "%"
              mode: slider
        button_1_short_release_media_mode:
          name: Button 1 (Short Release) Mode
          default: turn_on
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_1_short_release_media_control:
          name: Button 1 (Short Release) Control
          default: volume_set
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_1_long_release_media_mode:
          name: Button 1 (Long Release) Mode
          default: turn_off
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_1_long_release_media_control:
          name: Button 1 (Long Release) Control
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_1_double_media_mode:
          name: Button 1 (Double Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_1_double_media_control:
          name: Button 1 (Double Press) Control
          default: media_next_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_1_triple_media_mode:
          name: Button 1 (Triple Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_1_triple_media_control:
          name: Button 1 (Triple Press) Control
          default: media_previous_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_1_rotate_media_mode:
          name: Button 1 (Rotate) Mode
          default: volume
          description: Here you can select if want to use one of the Media functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Volume"
                  value: volume
              custom_value: false
              multiple: true
    button_2_custom:
      name: Button 2 - Settings for Custom Actions
      icon: mdi:numeric-2-circle-outline
      collapsed: true
      input:
        button_2_press:
          name: Button 2 (Short Press)
          description: Action to run on a short press of Button 2
          default: []
          selector:
            action: {}
        button_2_short_release:
          name: Button 2 (Short Release)
          description: Action to run on a release of Button 2 after a short press
          default: []
          selector:
            action: {}
        button_2_hold:
          name: Button 2 (Long Press)
          description:
            Action to run on a long press of Button 2. Will repeat while
            the button is held
          default: []
          selector:
            action: {}
        button_2_long_release:
          name: Button 2 (Long Release)
          description: Action to run when Button 2 is released after a long press.
          default: []
          selector:
            action: {}
        button_2_double:
          name: Button 2 (Double Press)
          description: Action to run on a double press of Button 2
          default: []
          selector:
            action: {}
        button_2_triple:
          name: Button 2 (Triple Press)
          description: Action to run on a triple press of Button 2
          default: []
          selector:
            action: {}
        button_2_quadruple:
          name: Button 2 (Quadruple Press)
          description: Action to run on a quadruple press of Button 2
          default: []
          selector:
            action: {}
        button_2_quintuple:
          name: Button 2 (Quintuple Press)
          description: Action to run on a quintuple press of Button 2
          default: []
          selector:
            action: {}
        button_2_rotate_left:
          name: Button 2 (Rotate Left)
          description:
            Action to run when dial is turned to the left after pressing
            Button 2
          default: []
          selector:
            action: {}
        button_2_rotate_right:
          name: Button 2 (Rotate Right)
          description:
            Action to run when dial is turned to the right after pressing
            Button 2
          default: []
          selector:
            action: {}
    button_2_light:
      name: Button 2 - Settings for Light Mode
      icon: mdi:lightbulb
      collapsed: true
      input:
        button_2_light:
          name: Light
          default: []
          description: The Lights to control with this button.
          selector:
            target:
              entity:
                - domain:
                    - light
        button_2_light_schedule:
          name: Light - Schedule
          default: []
          description:
            Create a schedule helper within Home Assistant to set presets
            for Light. This will facilitate implementing different brightness and
            color temperatures across the day **Schedules can be reused between light**
          selector:
            entity:
              filter:
                - domain:
                    - schedule
              multiple: false
        button_2_light_brightness:
          name: Light - Brightness
          default: 100
          description: The default brightness for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 100
              step: 5
              unit_of_measurement: "%"
              mode: slider
        button_2_light_color:
          name: Light - Color (Kelvin)
          default: 3333
          description: The default color temp in Kelvin for the light, this value is only used if not set in the schedule.
          selector:
            color_temp:
              unit: kelvin
              min: 2000
        button_2_light_transition:
          name: Light - Transition
          default: 1
          description: The default transition for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 10
              step: 1
              mode: slider
        button_2_short_release_light_mode:
          name: Button 2 (Short Release) Mode
          default: turn_on
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_2_long_release_light_mode:
          name: Button 2 (Long Release) Mode
          default: turn_off
          description: Here you can select if want to use one of the Light functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_2_rotate_light_mode:
          name: Button 2 (Rotate) Mode
          default: dim
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Dim"
                  value: dim
              custom_value: false
              multiple: true
    button_2_media:
      name: Button 2 - Settings for Media Mode
      icon: mdi:play-box
      collapsed: true
      input:
        button_2_media:
          name: Media Player
          default: []
          description:
            The media player to control with this button and the dial for
            volume. Short Press turns Media Player on, sets Start Volume and selects
            the dial for changing the volume based on speed of rotation, Long Release
            turns Media Player off
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_2_media_leader:
          name: Media Player Group Leader
          default: []
          description: The media player to use as Group Leader to use the join command with. This works great with Music Assistant. This Media Player is not used by the other actions.
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_2_media_volume:
          name: Media Player - Volume
          default: 35
          description: The default volume for the media player.
          selector:
            number:
              min: 0.0
              max: 100.0
              step: 5.0
              unit_of_measurement: "%"
              mode: slider
        button_2_short_release_media_mode:
          name: Button 2 (Short Release) Mode
          default: turn_on
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_2_short_release_media_control:
          name: Button 2 (Short Release) Control
          default: volume_set
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_2_long_release_media_mode:
          name: Button 2 (Long Release) Mode
          default: turn_off
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_2_long_release_media_control:
          name: Button 2 (Long Release) Control
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_2_double_media_mode:
          name: Button 2 (Double Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_2_double_media_control:
          name: Button 2 (Double Press) Control
          default: media_next_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_2_triple_media_mode:
          name: Button 2 (Triple Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_2_triple_media_control:
          name: Button 2 (Triple Press) Control
          default: media_previous_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_2_rotate_media_mode:
          name: Button 2 (Rotate) Mode
          default: volume
          description: Here you can select if want to use one of the Media functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Volume"
                  value: volume
              custom_value: false
              multiple: true
    button_3_custom:
      name: Button 3 - Settings for Custom Actions
      icon: mdi:numeric-3-circle-outline
      collapsed: true
      input:
        button_3_press:
          name: Button 3 (Short Press)
          description: Action to run on a short press of Button 3
          default: []
          selector:
            action: {}
        button_3_short_release:
          name: Button 3 (Short Release)
          description: Action to run on a release of Button 3 after a short press
          default: []
          selector:
            action: {}
        button_3_hold:
          name: Button 3 (Long Press)
          description:
            Action to run on a long press of Button 3. Will repeat while
            the button is held
          default: []
          selector:
            action: {}
        button_3_long_release:
          name: Button 3 (Long Release)
          description: Action to run when Button 3 is released after a long press.
          default: []
          selector:
            action: {}
        button_3_double:
          name: Button 3 (Double Press)
          description: Action to run on a double press of Button 3
          default: []
          selector:
            action: {}
        button_3_triple:
          name: Button 3 (Triple Press)
          description: Action to run on a triple press of Button 3
          default: []
          selector:
            action: {}
        button_3_quadruple:
          name: Button 3 (Quadruple Press)
          description: Action to run on a quadruple press of Button 3
          default: []
          selector:
            action: {}
        button_3_quintuple:
          name: Button 3 (Quintuple Press)
          description: Action to run on a quintuple press of Button 3
          default: []
          selector:
            action: {}
        button_3_rotate_left:
          name: Button 3 (Rotate Left)
          description:
            Action to run when dial is turned to the left after pressing
            Button 3
          default: []
          selector:
            action: {}
        button_3_rotate_right:
          name: Button 3 (Rotate Right)
          description:
            Action to run when dial is turned to the right after pressing
            Button 3
          default: []
          selector:
            action: {}
    button_3_light:
      name: Button 3 - Settings for Light Mode
      icon: mdi:lightbulb
      collapsed: true
      input:
        button_3_light:
          name: Light
          default: []
          description: The Lights to control with this button.
          selector:
            target:
              entity:
                - domain:
                    - light
        button_3_light_schedule:
          name: Light - Schedule
          default: []
          description:
            Create a schedule helper within Home Assistant to set presets
            for Light. This will facilitate implementing different brightness and
            color temperatures across the day **Schedules can be reused between light**
          selector:
            entity:
              filter:
                - domain:
                    - schedule
              multiple: false
        button_3_light_brightness:
          name: Light - Brightness
          default: 100
          description: The default brightness for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 100
              step: 5
              unit_of_measurement: "%"
              mode: slider
        button_3_light_color:
          name: Light - Color (Kelvin)
          default: 3333
          description: The default color temp in Kelvin for the light, this value is only used if not set in the schedule.
          selector:
            color_temp:
              unit: kelvin
              min: 2000
        button_3_light_transition:
          name: Light - Transition
          default: 1
          description: The default transition for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 10
              step: 1
              mode: slider
        button_3_short_release_light_mode:
          name: Button 3 (Short Release) Mode
          default: turn_on
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_3_long_release_light_mode:
          name: Button 3 (Long Release) Mode
          default: turn_off
          description: Here you can select if want to use one of the Light functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_3_rotate_light_mode:
          name: Button 3 (Rotate) Mode
          default: dim
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Dim"
                  value: dim
              custom_value: false
              multiple: true
    button_3_media:
      name: Button 3 - Settings for Media Mode
      icon: mdi:play-box
      collapsed: true
      input:
        button_3_media:
          name: Media Player
          default: []
          description:
            The media player to control with this button and the dial for
            volume. Short Press turns Media Player on, sets Start Volume and selects
            the dial for changing the volume based on speed of rotation, Long Release
            turns Media Player off
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_3_media_leader:
          name: Media Player Group Leader
          default: []
          description: The media player to use as Group Leader to use the join command with. This works great with Music Assistant. This Media Player is not used by the other actions.
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_3_media_volume:
          name: Media Player - Volume
          default: 35
          description: The default volume for the media player.
          selector:
            number:
              min: 0.0
              max: 100.0
              step: 5.0
              unit_of_measurement: "%"
              mode: slider
        button_3_short_release_media_mode:
          name: Button 3 (Short Release) Mode
          default: turn_on
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_3_short_release_media_control:
          name: Button 3 (Short Release) Control
          default: volume_set
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_3_long_release_media_mode:
          name: Button 3 (Long Release) Mode
          default: turn_off
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_3_long_release_media_control:
          name: Button 3 (Long Release) Control
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_3_double_media_mode:
          name: Button 3 (Double Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_3_double_media_control:
          name: Button 3 (Double Press) Control
          default: media_next_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_3_triple_media_mode:
          name: Button 3 (Triple Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_3_triple_media_control:
          name: Button 3 (Triple Press) Control
          default: media_previous_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_3_rotate_media_mode:
          name: Button 3 (Rotate) Mode
          default: volume
          description: Here you can select if want to use one of the Media functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Volume"
                  value: volume
              custom_value: false
              multiple: true
    button_4_custom:
      name: Button 4 - Settings for Custom Actions
      icon: mdi:numeric-4-circle-outline
      collapsed: true
      input:
        button_4_press:
          name: Button 4 (Short Press)
          description: Action to run on a short press of Button 4
          default: []
          selector:
            action: {}
        button_4_short_release:
          name: Button 4 (Short Release)
          description: Action to run on a release of Button 4 after a short press
          default: []
          selector:
            action: {}
        button_4_hold:
          name: Button 4 (Long Press)
          description:
            Action to run on a long press of Button 4. Will repeat while
            the button is held
          default: []
          selector:
            action: {}
        button_4_long_release:
          name: Button 4 (Long Release)
          description: Action to run when Button 4 is released after a long press.
          default: []
          selector:
            action: {}
        button_4_double:
          name: Button 4 (Double Press)
          description: Action to run on a double press of Button 4
          default: []
          selector:
            action: {}
        button_4_triple:
          name: Button 4 (Triple Press)
          description: Action to run on a triple press of Button 4
          default: []
          selector:
            action: {}
        button_4_quadruple:
          name: Button 4 (Quadruple Press)
          description: Action to run on a quadruple press of Button 4
          default: []
          selector:
            action: {}
        button_4_quintuple:
          name: Button 4 (Quintuple Press)
          description: Action to run on a quintuple press of Button 4
          default: []
          selector:
            action: {}
        button_4_rotate_left:
          name: Button 4 (Rotate Left)
          description:
            Action to run when dial is turned to the left after pressing
            Button 4
          default: []
          selector:
            action: {}
        button_4_rotate_right:
          name: Button 4 (Rotate Right)
          description:
            Action to run when dial is turned to the right after pressing
            Button 4
          default: []
          selector:
            action: {}
    button_4_light:
      name: Button 4 - Settings for Light Mode
      icon: mdi:lightbulb
      collapsed: true
      input:
        button_4_light:
          name: Light
          default: []
          description: The Lights to control with this button.
          selector:
            target:
              entity:
                - domain:
                    - light
        button_4_light_schedule:
          name: Light - Schedule
          default: []
          description:
            Create a schedule helper within Home Assistant to set presets
            for Light. This will facilitate implementing different brightness and
            color temperatures across the day **Schedules can be reused between light**
          selector:
            entity:
              filter:
                - domain:
                    - schedule
              multiple: false
        button_4_light_brightness:
          name: Light - Brightness
          default: 100
          description: The default brightness for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 100
              step: 5
              unit_of_measurement: "%"
              mode: slider
        button_4_light_color:
          name: Light - Color (Kelvin)
          default: 3333
          description: The default color temp in Kelvin for the light, this value is only used if not set in the schedule.
          selector:
            color_temp:
              unit: kelvin
              min: 2000
        button_4_light_transition:
          name: Light - Transition
          default: 1
          description: The default transition for the light, this value is only used if not set in the schedule.
          selector:
            number:
              min: 0
              max: 10
              step: 1
              mode: slider
        button_4_short_release_light_mode:
          name: Button 4 (Short Release) Mode
          default: turn_on
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_4_long_release_light_mode:
          name: Button 4 (Long Release) Mode
          default: turn_off
          description: Here you can select if want to use one of the Light functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Turn on"
                  value: turn_on
                - label: "Light: Turn off"
                  value: turn_off
                - label: "Light: Toggle"
                  value: toggle
              custom_value: false
              multiple: true
        button_4_rotate_light_mode:
          name: Button 4 (Rotate) Mode
          default: dim
          description: Here you can select if want to use one of the Light functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Light: Dim"
                  value: dim
              custom_value: false
              multiple: true
    button_4_media:
      name: Button 4 - Settings for Media Mode
      icon: mdi:play-box
      collapsed: true
      input:
        button_4_media:
          name: Media Player
          default: []
          description:
            The media player to control with this button and the dial for
            volume. Short Press turns Media Player on, sets Start Volume and selects
            the dial for changing the volume based on speed of rotation, Long Release
            turns Media Player off
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_4_media_leader:
          name: Media Player Group Leader
          default: []
          description: The media player to use as Group Leader to use the join command with. This works great with Music Assistant. This Media Player is not used by the other actions.
          selector:
            entity:
              filter:
                - domain:
                    - media_player
              multiple: false
        button_4_media_volume:
          name: Media Player - Volume
          default: 35
          description: The default volume for the media player.
          selector:
            number:
              min: 0.0
              max: 100.0
              step: 5.0
              unit_of_measurement: "%"
              mode: slider
        button_4_short_release_media_mode:
          name: Button 4 (Short Release) Mode
          default: turn_on
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_4_short_release_media_control:
          name: Button 4 (Short Release) Control
          default: volume_set
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_4_long_release_media_mode:
          name: Button 4 (Long Release) Mode
          default: turn_off
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_4_long_release_media_control:
          name: Button 4 (Long Release) Control
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_4_double_media_mode:
          name: Button 4 (Double Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_4_double_media_control:
          name: Button 4 (Double Press) Control
          default: media_next_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_4_triple_media_mode:
          name: Button 4 (Triple Press) Mode
          default: []
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Turn on"
                  value: turn_on
                - label: "Media Player: Turn off"
                  value: turn_off
                - label: "Media Player: Toggle"
                  value: toggle
                - label: "Media Player: Join"
                  value: join
                - label: "Media Player: Unjoin"
                  value: unjoin
              custom_value: false
              multiple: true
        button_4_triple_media_control:
          name: Button 4 (Triple Press) Control
          default: media_previous_track
          description: Here you can select if you want to use one of the Media functions. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Previous"
                  value: media_previous_track
                - label: "Media Player: Next"
                  value: media_next_track
                - label: "Media Player: Set Volume"
                  value: volume_set
              custom_value: false
              multiple: true
        button_4_rotate_media_mode:
          name: Button 4 (Rotate) Mode
          default: volume
          description: Here you can select if want to use one of the Media functions or stick with the default Custom option. Multiple options are possible, just select which you want to trigger at the same time.
          selector:
            select:
              options:
                - label: "Media Player: Volume"
                  value: volume
              custom_value: false
              multiple: true

mode: parallel
max_exceeded: silent

variables:
  remote: !input remote
  command: "{{ trigger.event.data.command }}"
  args: "{{ trigger.event.data.args }}"
  params: "{{ trigger.event.data.params }}"
  step_mode: "{{ trigger.event.data.params.step_mode | default('0') }}"
  step_size: "{{ trigger.event.data.params.step_size | default('0') }}"
  last_pressed: !input last_pressed

triggers:
  - trigger: event
    event_type: zha_event
    event_data:
      device_id: !input remote

actions:
  - alias: Set Helpers
    if:
      - condition: template
        value_template: "{{ command | regex_search('button_[1-4]') }}"
    then:
      - action: input_text.set_value
        data:
          value: "{{ command | regex_replace(find='[^1-4]', replace='') }}"
        target:
          entity_id: "{{ last_pressed }}"
  - alias: Remote interactions
    parallel:
      - alias: Button 1
        sequence:
          - variables:
              button_1_short_release_light_mode: !input button_1_short_release_light_mode
              button_1_long_release_light_mode: !input button_1_long_release_light_mode
              button_1_rotate_light_mode: !input button_1_rotate_light_mode
              button_1_light: !input button_1_light
              button_1_schedule: !input button_1_light_schedule
              button_1_brightness_pct_input: !input button_1_light_brightness
              button_1_brightness_pct: "{{ state_attr(button_1_schedule, 'brightness_pct') if button_1_schedule is defined and button_1_schedule != [] and state_attr(button_1_schedule, 'brightness_pct') is not none else button_1_brightness_pct_input }}"
              button_1_color_temp_kelvin_input: !input button_1_light_color
              button_1_color_temp_kelvin: "{{ state_attr(button_1_schedule, 'color_temp_kelvin') if button_1_schedule is defined and button_1_schedule != [] and state_attr(button_1_schedule, 'color_temp_kelvin') is not none else button_1_color_temp_kelvin_input }}"
              button_1_transition_input: !input button_1_light_transition
              button_1_transition: "{{ state_attr(button_1_schedule, 'transition') if button_1_schedule is defined and button_1_schedule != [] and state_attr(button_1_schedule, 'transition') is not none else button_1_transition_input }}"
              button_1_short_release_media_mode: !input button_1_short_release_media_mode
              button_1_short_release_media_control: !input button_1_short_release_media_control
              button_1_long_release_media_mode: !input button_1_long_release_media_mode
              button_1_long_release_media_control: !input button_1_long_release_media_control
              button_1_double_media_mode: !input button_1_double_media_mode
              button_1_double_media_control: !input button_1_double_media_control
              button_1_triple_media_mode: !input button_1_triple_media_mode
              button_1_triple_media_control: !input button_1_triple_media_control
              button_1_rotate_media_mode: !input button_1_rotate_media_mode
              button_1_media: !input button_1_media
              button_1_media_leader: !input button_1_media_leader
              button_1_volume: !input button_1_media_volume
              button_1_current_volume: "{{ state_attr(button_1_media, 'volume_level') if button_1_media is defined and button_1_media != [] and state_attr(button_1_media, 'volume_level') is not none else button_1_volume }}"
          - choose:
              - alias: button_1_press
                conditions: "{{ command == 'button_1_press' }}"
                sequence: !input button_1_press
              - alias: button_1_short_release
                conditions: "{{ command == 'button_1_short_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_1_short_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_light.entity_id | length > 0 or button_1_light.device_id | length > 0 or button_1_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_1_short_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_1_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_1_color_temp_kelvin }}"
                                  transition: "{{ button_1_transition }}"
                                target: "{{ button_1_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_1_short_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_1_transition }}"
                                target: "{{ button_1_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_1_short_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_1_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_1_color_temp_kelvin }}"
                                  transition: "{{ button_1_transition }}"
                                target: "{{ button_1_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_1_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_1_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_1_short_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_1_short_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_1_media }}"
                                target:
                                  entity_id: "{{ button_1_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_1_short_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_1_short_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_1_short_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_1_short_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_1_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_1_media }}"
              - alias: button_1_hold
                conditions: "{{ command == 'button_1_hold' }}"
                sequence: !input button_1_hold
              - alias: button_1_long_release
                conditions: "{{ command == 'button_1_long_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_1_long_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_light.entity_id | length > 0 or button_1_light.device_id | length > 0 or button_1_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_1_long_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_1_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_1_color_temp_kelvin }}"
                                  transition: "{{ button_1_transition }}"
                                target: "{{ button_1_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_1_long_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_1_transition }}"
                                target: "{{ button_1_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_1_long_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_1_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_1_color_temp_kelvin }}"
                                  transition: "{{ button_1_transition }}"
                                target: "{{ button_1_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_1_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_1_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_1_long_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_1_long_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_1_media }}"
                                target:
                                  entity_id: "{{ button_1_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_1_long_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_1_long_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_1_long_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_1_long_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_1_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_1_media }}"
              - alias: button_1_double
                conditions: "{{ command == 'button_1_double_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_1_double
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_1_double_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_1_double_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_1_double_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_1_double_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_1_media }}"
                                target:
                                  entity_id: "{{ button_1_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_1_double_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_1_double_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_1_double_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_1_double_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_1_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_1_media }}"
              - alias: button_1_triple
                conditions: "{{ command == 'button_1_triple_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_1_triple
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_1_triple_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_1_triple_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_1_triple_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_1_triple_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_1_media }}"
                                target:
                                  entity_id: "{{ button_1_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_1_triple_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_1_triple_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_1_triple_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_1_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_1_triple_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_1_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_1_media }}"
              - alias: button_1_quadruple
                conditions: "{{ command == 'button_1_quadruple_press' }}"
                sequence: !input button_1_quadruple
              - alias: button_1_quintuple
                conditions: "{{ command == 'button_1_quintuple_press' }}"
                sequence: !input button_1_quintuple
              - alias: button_1_rotate_left
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Down' and step_size != 255 and states(last_pressed) == '1' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_1_rotate_left
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_light.entity_id | length > 0 or button_1_light.device_id | length > 0 or button_1_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_1_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: -{{ step_size }}
                              transition: "{{ button_1_transition }}"
                            target: "{{ button_1_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_1_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_1_new_volume = button_1_current_volume - ( (step_size / 8) / 100)%} {{ 0.0 if button_1_new_volume < 0.0 else button_1_new_volume }}"
                              target:
                                entity_id: "{{ button_1_media }}"
              - alias: button_1_rotate_right
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Up' and step_size != 255 and states(last_pressed) == '1' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_1_rotate_right
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_light.entity_id | length > 0 or button_1_light.device_id | length > 0 or button_1_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_1_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: "{{ step_size }}"
                              transition: "{{ button_1_transition }}"
                            target: "{{ button_1_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_1_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_1_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_1_new_volume = button_1_current_volume + ( (step_size / 8) / 100)%} {{ 1.0 if button_1_new_volume > 1.0 else button_1_new_volume }}"
                              target:
                                entity_id: "{{ button_1_media }}"
      - alias: Button 2
        sequence:
          - variables:
              button_2_short_release_light_mode: !input button_2_short_release_light_mode
              button_2_long_release_light_mode: !input button_2_long_release_light_mode
              button_2_rotate_light_mode: !input button_2_rotate_light_mode
              button_2_light: !input button_2_light
              button_2_schedule: !input button_2_light_schedule
              button_2_brightness_pct_input: !input button_2_light_brightness
              button_2_brightness_pct: "{{ state_attr(button_2_schedule, 'brightness_pct') if button_2_schedule is defined and button_2_schedule != [] and state_attr(button_2_schedule, 'brightness_pct') is not none else button_2_brightness_pct_input }}"
              button_2_color_temp_kelvin_input: !input button_2_light_color
              button_2_color_temp_kelvin: "{{ state_attr(button_2_schedule, 'color_temp_kelvin') if button_2_schedule is defined and button_2_schedule != [] and state_attr(button_2_schedule, 'color_temp_kelvin') is not none else button_2_color_temp_kelvin_input }}"
              button_2_transition_input: !input button_2_light_transition
              button_2_transition: "{{ state_attr(button_2_schedule, 'transition') if button_2_schedule is defined and button_2_schedule != [] and state_attr(button_2_schedule, 'transition') is not none else button_2_transition_input }}"
              button_2_short_release_media_mode: !input button_2_short_release_media_mode
              button_2_short_release_media_control: !input button_2_short_release_media_control
              button_2_long_release_media_mode: !input button_2_long_release_media_mode
              button_2_long_release_media_control: !input button_2_long_release_media_control
              button_2_double_media_mode: !input button_2_double_media_mode
              button_2_double_media_control: !input button_2_double_media_control
              button_2_triple_media_mode: !input button_2_triple_media_mode
              button_2_triple_media_control: !input button_2_triple_media_control
              button_2_rotate_media_mode: !input button_2_rotate_media_mode
              button_2_media: !input button_2_media
              button_2_media_leader: !input button_2_media_leader
              button_2_volume: !input button_2_media_volume
              button_2_current_volume: "{{ state_attr(button_2_media, 'volume_level') if button_2_media is defined and button_2_media != [] and state_attr(button_2_media, 'volume_level') is not none else button_2_volume }}"
          - choose:
              - alias: button_2_press
                conditions: "{{ command == 'button_2_press' }}"
                sequence: !input button_2_press
              - alias: button_2_short_release
                conditions: "{{ command == 'button_2_short_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_2_short_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_light.entity_id | length > 0 or button_2_light.device_id | length > 0 or button_2_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_2_short_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_2_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_2_color_temp_kelvin }}"
                                  transition: "{{ button_2_transition }}"
                                target: "{{ button_2_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_2_short_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_2_transition }}"
                                target: "{{ button_2_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_2_short_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_2_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_2_color_temp_kelvin }}"
                                  transition: "{{ button_2_transition }}"
                                target: "{{ button_2_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_2_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_2_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_2_short_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_2_short_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_2_media }}"
                                target:
                                  entity_id: "{{ button_2_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_2_short_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_2_short_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_2_short_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_2_short_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_2_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_2_media }}"
              - alias: button_2_hold
                conditions: "{{ command == 'button_2_hold' }}"
                sequence: !input button_2_hold
              - alias: button_2_long_release
                conditions: "{{ command == 'button_2_long_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_2_long_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_light.entity_id | length > 0 or button_2_light.device_id | length > 0 or button_2_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_2_long_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_2_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_2_color_temp_kelvin }}"
                                  transition: "{{ button_2_transition }}"
                                target: "{{ button_2_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_2_long_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_2_transition }}"
                                target: "{{ button_2_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_2_long_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_2_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_2_color_temp_kelvin }}"
                                  transition: "{{ button_2_transition }}"
                                target: "{{ button_2_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_2_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_2_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_2_long_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_2_long_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_2_media }}"
                                target:
                                  entity_id: "{{ button_2_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_2_long_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_2_long_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_2_long_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_2_long_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_2_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_2_media }}"
              - alias: button_2_double
                conditions: "{{ command == 'button_2_double_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_2_double
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_2_double_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_2_double_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_2_double_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_2_double_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_2_media }}"
                                target:
                                  entity_id: "{{ button_2_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_2_double_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_2_double_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_2_double_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_2_double_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_2_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_2_media }}"
              - alias: button_2_triple
                conditions: "{{ command == 'button_2_triple_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_2_triple
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_2_triple_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_2_triple_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_2_triple_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_2_triple_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_2_media }}"
                                target:
                                  entity_id: "{{ button_2_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_2_triple_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_2_triple_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_2_triple_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_2_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_2_triple_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_2_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_2_media }}"
              - alias: button_2_quadruple
                conditions: "{{ command == 'button_2_quadruple_press' }}"
                sequence: !input button_2_quadruple
              - alias: button_2_quintuple
                conditions: "{{ command == 'button_2_quintuple_press' }}"
                sequence: !input button_2_quintuple
              - alias: button_2_rotate_left
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Down' and step_size != 255 and states(last_pressed) == '2' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_2_rotate_left
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_light.entity_id | length > 0 or button_2_light.device_id | length > 0 or button_2_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_2_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: -{{ step_size }}
                              transition: "{{ button_2_transition }}"
                            target: "{{ button_2_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_2_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_2_new_volume = button_2_current_volume - ( (step_size / 8) / 100)%} {{ 0.0 if button_2_new_volume < 0.0 else button_2_new_volume }}"
                              target:
                                entity_id: "{{ button_2_media }}"
              - alias: button_2_rotate_right
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Up' and step_size != 255 and states(last_pressed) == '2' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_2_rotate_right
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_light.entity_id | length > 0 or button_2_light.device_id | length > 0 or button_2_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_2_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: "{{ step_size }}"
                              transition: "{{ button_2_transition }}"
                            target: "{{ button_2_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_2_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_2_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_2_new_volume = button_2_current_volume + ( (step_size / 8) / 100)%} {{ 2.0 if button_2_new_volume > 2.0 else button_2_new_volume }}"
                              target:
                                entity_id: "{{ button_2_media }}"
      - alias: Button 3
        sequence:
          - variables:
              button_3_short_release_light_mode: !input button_3_short_release_light_mode
              button_3_long_release_light_mode: !input button_3_long_release_light_mode
              button_3_rotate_light_mode: !input button_3_rotate_light_mode
              button_3_light: !input button_3_light
              button_3_schedule: !input button_3_light_schedule
              button_3_brightness_pct_input: !input button_3_light_brightness
              button_3_brightness_pct: "{{ state_attr(button_3_schedule, 'brightness_pct') if button_3_schedule is defined and button_3_schedule != [] and state_attr(button_3_schedule, 'brightness_pct') is not none else button_3_brightness_pct_input }}"
              button_3_color_temp_kelvin_input: !input button_3_light_color
              button_3_color_temp_kelvin: "{{ state_attr(button_3_schedule, 'color_temp_kelvin') if button_3_schedule is defined and button_3_schedule != [] and state_attr(button_3_schedule, 'color_temp_kelvin') is not none else button_3_color_temp_kelvin_input }}"
              button_3_transition_input: !input button_3_light_transition
              button_3_transition: "{{ state_attr(button_3_schedule, 'transition') if button_3_schedule is defined and button_3_schedule != [] and state_attr(button_3_schedule, 'transition') is not none else button_3_transition_input }}"
              button_3_short_release_media_mode: !input button_3_short_release_media_mode
              button_3_short_release_media_control: !input button_3_short_release_media_control
              button_3_long_release_media_mode: !input button_3_long_release_media_mode
              button_3_long_release_media_control: !input button_3_long_release_media_control
              button_3_double_media_mode: !input button_3_double_media_mode
              button_3_double_media_control: !input button_3_double_media_control
              button_3_triple_media_mode: !input button_3_triple_media_mode
              button_3_triple_media_control: !input button_3_triple_media_control
              button_3_rotate_media_mode: !input button_3_rotate_media_mode
              button_3_media: !input button_3_media
              button_3_media_leader: !input button_3_media_leader
              button_3_volume: !input button_3_media_volume
              button_3_current_volume: "{{ state_attr(button_3_media, 'volume_level') if button_3_media is defined and button_3_media != [] and state_attr(button_3_media, 'volume_level') is not none else button_3_volume }}"
          - choose:
              - alias: button_3_press
                conditions: "{{ command == 'button_3_press' }}"
                sequence: !input button_3_press
              - alias: button_3_short_release
                conditions: "{{ command == 'button_3_short_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_3_short_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_light.entity_id | length > 0 or button_3_light.device_id | length > 0 or button_3_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_3_short_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_3_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_3_color_temp_kelvin }}"
                                  transition: "{{ button_3_transition }}"
                                target: "{{ button_3_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_3_short_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_3_transition }}"
                                target: "{{ button_3_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_3_short_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_3_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_3_color_temp_kelvin }}"
                                  transition: "{{ button_3_transition }}"
                                target: "{{ button_3_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_3_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_3_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_3_short_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_3_short_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_3_media }}"
                                target:
                                  entity_id: "{{ button_3_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_3_short_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_3_short_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_3_short_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_3_short_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_3_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_3_media }}"
              - alias: button_3_hold
                conditions: "{{ command == 'button_3_hold' }}"
                sequence: !input button_3_hold
              - alias: button_3_long_release
                conditions: "{{ command == 'button_3_long_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_3_long_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_light.entity_id | length > 0 or button_3_light.device_id | length > 0 or button_3_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_3_long_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_3_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_3_color_temp_kelvin }}"
                                  transition: "{{ button_3_transition }}"
                                target: "{{ button_3_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_3_long_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_3_transition }}"
                                target: "{{ button_3_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_3_long_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_3_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_3_color_temp_kelvin }}"
                                  transition: "{{ button_3_transition }}"
                                target: "{{ button_3_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_3_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_3_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_3_long_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_3_long_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_3_media }}"
                                target:
                                  entity_id: "{{ button_3_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_3_long_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_3_long_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_3_long_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_3_long_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_3_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_3_media }}"
              - alias: button_3_double
                conditions: "{{ command == 'button_3_double_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_3_double
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_3_double_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_3_double_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_3_double_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_3_double_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_3_media }}"
                                target:
                                  entity_id: "{{ button_3_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_3_double_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_3_double_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_3_double_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_3_double_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_3_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_3_media }}"
              - alias: button_3_triple
                conditions: "{{ command == 'button_3_triple_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_3_triple
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_3_triple_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_3_triple_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_3_triple_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_3_triple_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_3_media }}"
                                target:
                                  entity_id: "{{ button_3_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_3_triple_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_3_triple_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_3_triple_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_3_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_3_triple_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_3_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_3_media }}"
              - alias: button_3_quadruple
                conditions: "{{ command == 'button_3_quadruple_press' }}"
                sequence: !input button_3_quadruple
              - alias: button_3_quintuple
                conditions: "{{ command == 'button_3_quintuple_press' }}"
                sequence: !input button_3_quintuple
              - alias: button_3_rotate_left
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Down' and step_size != 255 and states(last_pressed) == '3' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_3_rotate_left
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_light.entity_id | length > 0 or button_3_light.device_id | length > 0 or button_3_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_3_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: -{{ step_size }}
                              transition: "{{ button_3_transition }}"
                            target: "{{ button_3_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_3_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_3_new_volume = button_3_current_volume - ( (step_size / 8) / 100)%} {{ 0.0 if button_3_new_volume < 0.0 else button_3_new_volume }}"
                              target:
                                entity_id: "{{ button_3_media }}"
              - alias: button_3_rotate_right
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Up' and step_size != 255 and states(last_pressed) == '3' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_3_rotate_right
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_light.entity_id | length > 0 or button_3_light.device_id | length > 0 or button_3_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_3_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: "{{ step_size }}"
                              transition: "{{ button_3_transition }}"
                            target: "{{ button_3_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_3_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_3_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_3_new_volume = button_3_current_volume + ( (step_size / 8) / 100)%} {{ 3.0 if button_3_new_volume > 3.0 else button_3_new_volume }}"
                              target:
                                entity_id: "{{ button_3_media }}"
      - alias: Button 4
        sequence:
          - variables:
              button_4_short_release_light_mode: !input button_4_short_release_light_mode
              button_4_long_release_light_mode: !input button_4_long_release_light_mode
              button_4_rotate_light_mode: !input button_4_rotate_light_mode
              button_4_light: !input button_4_light
              button_4_schedule: !input button_4_light_schedule
              button_4_brightness_pct_input: !input button_4_light_brightness
              button_4_brightness_pct: "{{ state_attr(button_4_schedule, 'brightness_pct') if button_4_schedule is defined and button_4_schedule != [] and state_attr(button_4_schedule, 'brightness_pct') is not none else button_4_brightness_pct_input }}"
              button_4_color_temp_kelvin_input: !input button_4_light_color
              button_4_color_temp_kelvin: "{{ state_attr(button_4_schedule, 'color_temp_kelvin') if button_4_schedule is defined and button_4_schedule != [] and state_attr(button_4_schedule, 'color_temp_kelvin') is not none else button_4_color_temp_kelvin_input }}"
              button_4_transition_input: !input button_4_light_transition
              button_4_transition: "{{ state_attr(button_4_schedule, 'transition') if button_4_schedule is defined and button_4_schedule != [] and state_attr(button_4_schedule, 'transition') is not none else button_4_transition_input }}"
              button_4_short_release_media_mode: !input button_4_short_release_media_mode
              button_4_short_release_media_control: !input button_4_short_release_media_control
              button_4_long_release_media_mode: !input button_4_long_release_media_mode
              button_4_long_release_media_control: !input button_4_long_release_media_control
              button_4_double_media_mode: !input button_4_double_media_mode
              button_4_double_media_control: !input button_4_double_media_control
              button_4_triple_media_mode: !input button_4_triple_media_mode
              button_4_triple_media_control: !input button_4_triple_media_control
              button_4_rotate_media_mode: !input button_4_rotate_media_mode
              button_4_media: !input button_4_media
              button_4_media_leader: !input button_4_media_leader
              button_4_volume: !input button_4_media_volume
              button_4_current_volume: "{{ state_attr(button_4_media, 'volume_level') if button_4_media is defined and button_4_media != [] and state_attr(button_4_media, 'volume_level') is not none else button_4_volume }}"
          - choose:
              - alias: button_4_press
                conditions: "{{ command == 'button_4_press' }}"
                sequence: !input button_4_press
              - alias: button_4_short_release
                conditions: "{{ command == 'button_4_short_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_4_short_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_light.entity_id | length > 0 or button_4_light.device_id | length > 0 or button_4_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_4_short_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_4_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_4_color_temp_kelvin }}"
                                  transition: "{{ button_4_transition }}"
                                target: "{{ button_4_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_4_short_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_4_transition }}"
                                target: "{{ button_4_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_4_short_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_4_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_4_color_temp_kelvin }}"
                                  transition: "{{ button_4_transition }}"
                                target: "{{ button_4_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_4_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_4_short_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_4_short_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_4_short_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_4_media }}"
                                target:
                                  entity_id: "{{ button_4_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_4_short_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_4_short_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_4_short_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_4_short_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_4_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_4_media }}"
              - alias: button_4_hold
                conditions: "{{ command == 'button_4_hold' }}"
                sequence: !input button_4_hold
              - alias: button_4_long_release
                conditions: "{{ command == 'button_4_long_release' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_4_long_release
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_light.entity_id | length > 0 or button_4_light.device_id | length > 0 or button_4_light.area_id | length > 0 }}"
                    then:
                      - parallel:
                          - alias: turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_4_long_release_light_mode }}"
                            then:
                              - action: light.turn_on
                                data:
                                  brightness_pct: "{{ button_4_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_4_color_temp_kelvin }}"
                                  transition: "{{ button_4_transition }}"
                                target: "{{ button_4_light }}"
                          - alias: turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_4_long_release_light_mode }}"
                            then:
                              - action: light.turn_off
                                data:
                                  transition: "{{ button_4_transition }}"
                                target: "{{ button_4_light }}"
                          - alias: toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_4_long_release_light_mode }}"
                            then:
                              - action: light.toggle
                                data:
                                  brightness_pct: "{{ button_4_brightness_pct }}"
                                  color_temp_kelvin: "{{ button_4_color_temp_kelvin }}"
                                  transition: "{{ button_4_transition }}"
                                target: "{{ button_4_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_4_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_4_long_release_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_4_long_release_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_4_long_release_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_4_media }}"
                                target:
                                  entity_id: "{{ button_4_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_4_long_release_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_4_long_release_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_4_long_release_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_4_long_release_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_4_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_4_media }}"
              - alias: button_4_double
                conditions: "{{ command == 'button_4_double_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_4_double
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_4_double_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_4_double_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_4_double_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_4_double_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_4_media }}"
                                target:
                                  entity_id: "{{ button_4_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_4_double_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_4_double_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_4_double_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_4_double_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_4_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_4_media }}"
              - alias: button_4_triple
                conditions: "{{ command == 'button_4_triple_press' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_4_triple
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_media != [] }}"
                    then:
                      - parallel:
                          - alias: media_player.turn_on
                            if:
                              - condition: template
                                value_template: "{{ 'turn_on' in button_4_triple_media_mode }}"
                            then:
                              - action: media_player.turn_on
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.turn_off
                            if:
                              - condition: template
                                value_template: "{{ 'turn_off' in button_4_triple_media_mode }}"
                            then:
                              - action: media_player.turn_off
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.toggle
                            if:
                              - condition: template
                                value_template: "{{ 'toggle' in button_4_triple_media_mode }}"
                            then:
                              - action: media_player.toggle
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.join
                            if:
                              - condition: template
                                value_template: "{{ 'join' in button_4_triple_media_mode }}"
                            then:
                              - action: media_player.join
                                data:
                                  group_members: "{{ button_4_media }}"
                                target:
                                  entity_id: "{{ button_4_media_leader }}"
                          - alias: media_player.unjoin
                            if:
                              - condition: template
                                value_template: "{{ 'unjoin' in button_4_triple_media_mode }}"
                            then:
                              - action: media_player.unjoin
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_previous_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_previous_track' in button_4_triple_media_control }}"
                            then:
                              - action: media_player.media_previous_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.media_next_track
                            if:
                              - condition: template
                                value_template: "{{ 'media_next_track' in button_4_triple_media_control }}"
                            then:
                              - action: media_player.media_next_track
                                target:
                                  entity_id: "{{ button_4_media }}"
                          - alias: media_player.volume_set
                            if:
                              - condition: template
                                value_template: "{{ 'volume_set' in button_4_triple_media_control }}"
                            then:
                              - action: media_player.volume_set
                                data:
                                  volume_level: "{{( button_4_volume / 100 )}}"
                                target:
                                  entity_id: "{{ button_4_media }}"
              - alias: button_4_quadruple
                conditions: "{{ command == 'button_4_quadruple_press' }}"
                sequence: !input button_4_quadruple
              - alias: button_4_quintuple
                conditions: "{{ command == 'button_4_quintuple_press' }}"
                sequence: !input button_4_quintuple
              - alias: button_4_rotate_left
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Down' and step_size != 255 and states(last_pressed) == '4' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_4_rotate_left
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_light.entity_id | length > 0 or button_4_light.device_id | length > 0 or button_4_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_4_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: -{{ step_size }}
                              transition: "{{ button_4_transition }}"
                            target: "{{ button_4_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_4_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_4_new_volume = button_4_current_volume - ( (step_size / 8) / 100)%} {{ 0.0 if button_4_new_volume < 0.0 else button_4_new_volume }}"
                              target:
                                entity_id: "{{ button_4_media }}"
              - alias: button_4_rotate_right
                conditions: "{{ command == 'step_with_on_off' and step_mode == 'StepMode.Up' and step_size != 255 and states(last_pressed) == '4' }}"
                sequence:
                  - alias: Custom Action
                    sequence: !input button_4_rotate_right
                  - alias: Light Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_light.entity_id | length > 0 or button_4_light.device_id | length > 0 or button_4_light.area_id | length > 0 }}"
                    then:
                      - alias: dim
                        if:
                          - condition: template
                            value_template: "{{ 'dim' in button_4_rotate_light_mode }}"
                        then:
                          - action: light.turn_on
                            data:
                              brightness_step: "{{ step_size }}"
                              transition: "{{ button_4_transition }}"
                            target: "{{ button_4_light }}"
                  - alias: Media Mode
                    if:
                      - condition: template
                        value_template: "{{ button_4_media != [] }}"
                    then:
                      - alias: volume
                        if:
                          - condition: template
                            value_template: "{{ 'volume' in button_4_rotate_media_mode }}"
                        then:
                          sequence:
                            - action: media_player.volume_set
                              data:
                                volume_level: "{% set button_4_new_volume = button_4_current_volume + ( (step_size / 8) / 100)%} {{ 4.0 if button_4_new_volume > 4.0 else button_4_new_volume }}"
                              target:
                                entity_id: "{{ button_4_media }}"
